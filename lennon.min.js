/*!
 * Lennon v0.1
 *
 * An extremely lightweight router that uses the History API and falls back to hash.
 *
 * @author Gabe Hayes <gabriel.hayes@gmail.com>
 * @copyright 2013, Gabe Hayes
 */

(function(e,t,n,r){return e.Lennon=function(r){var i,s=!1,o=t.extend({historyEnabled:n.history,linkSelector:"a[target!=_blank]:not([href^=http])",logger:e.console,publishEvent:null},r),u=[],a=function(n){var r=function(){n.process()};s||(t(document).on("click",o.linkSelector,function(){var n=t(this),i=n.attr("href");if(o.historyEnabled)return e.history.pushState(null,null,i),r(),!1;n.data("lennonized")||n.attr("href","/#"+i).data("lennonized",!0)}),t(e).on(o.historyEnabled?"popstate":"hashchange",r),s=!0)};return function(){return{define:function(e,t,n){var r=e.match(/:/g)||[],i=new RegExp("^"+e.replace(/\//g,"\\/").replace(/:(\w*)/g,"(\\w*)")+"$"),s={eventName:t,exitEventName:n,paramCount:r.length,path:e,pattern:i};if("string"==typeof t&&!o.publishEvent)throw new Error('Cannot publish the event "'+t+'" for the route "'+e+'". No publishEvent has been provided.');o.logger.info("Adding route",e,s),u.push(s),a(this)},dispatch:function(e,t){var n;return o.logger.info("Dispatching",e.path,"with",t),"function"==typeof e.eventName?n=e.eventName(t||{}):n=o.publishEvent(e.eventName,t||{}),n},process:function(){var t={},n,r,s,a,f=o.historyEnabled?e.location.pathname:e.location.hash.replace("#","")||"/";e.location.hash&&o.historyEnabled&&(e.location.href=e.location.hash.replace("#","")),o.logger.info("Processing path",f);for(n in u){a=f.match(u[n].pattern);if(a){s=u[n].path.match(/:(\w*)/g,"(\\w*)");for(r=1;r<=u[n].paramCount;r++)t[s[r-1].replace(/:/g,"")]=a[r];if(i){if(i.path===u[n].path)return!1;i.exitEventName&&(o.logger.info("Exiting",i.path,"with",t||{}),"function"==typeof i.exitEventName?i.exitEventName(t||{}):o.publishEvent(i.exitEventName,t||{}))}return i=u[n],this.dispatch(u[n],t)}}o.logger.warn("No route dispatched")}}}()}})(this,jQuery,Modernizr),typeof define=="function"&&define.amd&&define("Lennon",[],function(){return Lennon}),define("lennon",function(){});